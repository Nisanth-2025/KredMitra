# This is a simplified docker-compose file for a basic Hyperledger Fabric network.
# A real-world setup would be more complex, involving multiple organizations, CAs, and proper volume mapping.
# This is based on the test-network from fabric-samples.

version: '3.7'

services:
  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:2.4
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      # Add other necessary TLS and genesis block configurations
    ports:
      - "7050:7050"
    volumes:
      - ./organizations/ordererOrganizations/example.com/orderers/orderer.example.com:/var/hyperledger/orderer
    networks:
      - kredmitra_net

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:2.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      # Add other necessary TLS and chaincode configurations
    ports:
      - "7051:7051"
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com:/etc/hyperledger/fabric
    networks:
      - kredmitra_net

networks:
  kredmitra_net:
